#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
x_axis = c(1:10000)
plot(x_axis,u_values)
plot(t_values)
plot(x_axis,u_values)
plot(x_axis,u_values)
s
plot(t_values)
plot(1/t_values)
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
sig_values<-c()
for (i in 1:1000) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
sig_values[i]=1/t
}
x_axis = c(1:1000)
plot(x_axis,u_values)
plot(1/t_values)
plot(1/sig_values)
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
sig_values<-c()
for (i in 1:1000) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
sig_values[i]=1/t
}
x_axis = c(1:1000)
plot(x_axis,u_values)
plot(1/sig_values)
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:1000) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:1000)
plot(x_axis,u_values)
plot(1/t_values)
plot(sigmasquared_values)
plot(sigmasquared_values,ylim=c(4,20))
plot(sigmasquared_values,ylim=c(6,18))
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:500) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:500)
plot(x_axis,u_values)
plot(1/t_values)
plot(sigmasquared_values,ylim=c(6,18))
plot(x_axis,u_values)
plot(x_axis,u_values,ylim=c(0,18))
plot(x_axis,u_values,ylim=c(5,15))
plot(x_axis,u_values,ylim=c(8,12))
plot(x_axis,u_values,ylim=c(9,11))
plot(x_axis,u_values,ylim=c(9.5,10.5))
plot(x_axis,u_values,ylim=c(9.5,10))
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:500) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((u-x_values)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:500)
plot(x_axis,u_values,ylim=c(9.5,10))
plot(1/t_values)
plot(sigmasquared_values,ylim=c(6,18))
t_values
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:500) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((u-x_values)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:500)
plot(x_axis,u_values,ylim=c(9.5,10))
plot(1/t_values)
plot(sigmasquared_values,ylim=c(6,18))
plot(x_axis,u_values,ylim=c(9.5,10))
plot(1/t_values)
plot(sigmasquared_values,ylim=c(6,18))
mean(u_values)
mean(sigmasquared_values)
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,this_shape,this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:500) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,shape=this_shape,scale=this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:500)
plot(x_axis,u_values,ylim=c(9.5,10))
plot(1/t_values)
plot(sigmasquared_values,ylim=c(6,18))
#finalestimates
mean(u_values)
mean(sigmasquared_values)
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,shape=this_shape,scale=this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:500) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,shape=this_shape,scale=this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:500)
plot(x_axis,u_values,ylim=c(9.5,10))
plot(1/t_values)
plot(sigmasquared_values,ylim=c(6,18))
#finalestimates
mean(u_values)
mean(sigmasquared_values)
plot(sigmasquared_values,ylim=c(6,18))
plot(sigmasquared_values,ylim=c(0,1))
plot(sigmasquared_values,ylim=c(0,0.2))
plot(sigmasquared_values,ylim=c(0,0.1))
plot(sigmasquared_values,ylim=c(0,0.001))
plot(x_axis,u_values)
,ylim=c(9.5,10)
plot(x_axis,u_values,ylim=c(9.5,10))
plot(x_axis,u_values,ylim=c(9.7,10))
plot(x_axis,u_values,ylim=c(9.8,10))
plot(x_axis,u_values,ylim=c(9.87,10))
plot(x_axis,u_values,ylim=c(9.87,9.92))
u_values
plot(x_axis,u_values,ylim=c(9.9,9.91))
plot(x_axis,u_values,ylim=c(9.902,9.904))
plot(x_axis,u_values,ylim=c(9.903,9.9034))
plot(x_axis,u_values,ylim=c(9.9034,9.9034))
plot(x_axis,u_values,ylim=c(9.903,9.9034))
plot(x_axis,u_values,ylim=c(9.9032,9.9034))
plot(x_axis,u_values,ylim=c(9.9033,9.9034))
plot(x_axis,u_values,ylim=c(9.9033,9.90334))
plot(x_axis,u_values,ylim=c(9.90332,9.90334))
plot(x_axis,u_values,ylim=c(9.903325,9.90334))
plot(x_axis,u_values,ylim=c(9.903325,9.903335))
plot(sigmasquared_values,ylim=c(0,0.001))
plot(sigmasquared_values,ylim=c(0,0.00001))
plot(sigmasquared_values,ylim=c(0,0.0001))
plot(sigmasquared_values,ylim=c(0,0.001))
plot(sigmasquared_values,ylim=c(0,0.0009))
plot(sigmasquared_values,ylim=c(0,0.0005))
plot(sigmasquared_values,ylim=c(0,0.0003))
plot(sigmasquared_values,ylim=c(00.000001,0.0003))
plot(sigmasquared_values,ylim=c(00.00001,0.0003))
plot(sigmasquared_values,ylim=c(00.0001,0.0003))
plot(sigmasquared_values,ylim=c(00.0004,0.0003))
plot(sigmasquared_values,ylim=c(00.0002,0.0003))
#finalestimates
mean(u_values)
mean(sigmasquared_values)
t_estimates
sigmasquared_values
t_estimates
plot(t_estimates)
max(sigmasquared_values)
u
t
mean(u_values)
mean(sigmasquared_values)
set.seed(123)
x_values <- c(12.8, 10.5, 13.2, 13.0, 7.0, 11.0, 13.4, 13.2, 9.5, 11.0, 10.9, 4.6, 5.8, 3.2, 9.8, 0.2, 11.2,
7.2, 14.7, 5.9, 9.7, 17.6, 8.5, 6.8, 7.2, 12.2, 16.7, 10.4, 14.2, 5.7)
xbar<- mean(x_values)
n<-length(x_values)
u0<- 8
a0sqr<- 4
alpha0<- 5
beta0<- 1
t0=1/a0sqr
t<-t0#assume equal t0 at first
#posterior estimate for u
thismean<- (n*xbar*t+u0*t0)/(n*t+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#posterior estimate for t
S <- sum((x_values-u_estimate)^2)
this_shape<-alpha0+n/2
this_scale<-beta0+S/2
t_estimates<-rgamma(1000,shape=this_shape,scale=this_scale)
t<-mean(t_estimates)
#repeat1000times
u_values<-c()
t_values<-c()
for (i in 1:500) {
#estimate u
thismean<- ((n*xbar*t)+(u0*t0))/((n*t)+t0)
thisvariance <- 1/(n*t+t0)
u_estimates<-rnorm(1000,thismean,thisvariance)
u<-mean(u_estimates)
#estimate t
S <- sum((x_values-u)^2)
this_shape<-alpha0+(n/2)
this_scale<-beta0+(S/2)
t_estimates<-rgamma(1000,shape=this_shape,scale=this_scale)
t<-mean(t_estimates)
u_values[i]=u
t_values[i]=t
}
sigmasquared_values = 1/t_values
x_axis = c(1:500)
plot(x_axis,u_values,ylim=c(9.903325,9.903335))
plot(sigmasquared_values,ylim=c(00.0002,0.0003))
#finalestimates
mean(u_values)
mean(sigmasquared_values)
devtools::install_github("connolr3/eegdatasim")
devtools::install_github("connolr3/eegdatasim",force = TRUE)
remove.packages("eegdatasim", lib="~/R/win-library/4.1")
devtools::install_github("connolr3/eegdatasim")
library(eegdatasim)
noise(200,1,250)
makinen1a()
remove.packages("eegdatasim", lib="~/R/win-library/4.1")
devtools::install_github("connolr3/eegdatasim")
devtools::install_github("connolr3/eegdatasim")
library(eegdatasim)
noise(200,1,250)
getwd()
setwd("C:/Users/rosie/OneDrive - TCDUD.onmicrosoft.com/TCD/4th Year/FYP/eegdatasim")
path<-dir.create(file.path("R","meanpower.mat"), recursive = TRUE)
meanpower <- as.vector(R.matlab::readMat(path)$meanpower)
path
path<-file.path("R","meanpower.mat"), recursive = TRUE
path<-file.path("R","meanpower.mat")
meanpower <- as.vector(R.matlab::readMat(path)$meanpower)
remove.packages("eegdatasim", lib="~/R/win-library/4.1")
devtools::install_github("connolr3/eegdatasim")
